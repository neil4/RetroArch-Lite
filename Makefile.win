TARGET = RetroArchLite.exe

HAVE_DINPUT = 1
HAVE_XAUDIO = 1
HAVE_DSOUND = 1
HAVE_OPENGL = 1
HAVE_FBO = 1
HAVE_DYLIB = 1
HAVE_D3D9 = 0
HAVE_NETPLAY = 1
HAVE_NETWORKING = 1
HAVE_STDIN_CMD = 1
HAVE_COMMAND = 1
HAVE_THREADS = 1
HAVE_7ZIP = 0
HAVE_ZLIB_DEFLATE = 1
HAVE_PYTHON = 0
DYNAMIC = 1
OVERLAY = 1

HAVE_XINPUT = 1

HAVE_SDL      := 0
HAVE_SDL2     := 0
HAVE_RSOUND   := 0
HAVE_PYTHON   := 0

HAVE_FREETYPE := 0
HAVE_FFMPEG   := 0

HAVE_CG       := 0
HAVE_GLSL     := 1
HAVE_LIBXML2  := 1
HAVE_ZLIB     := 1
WANT_ZLIB     := 0

ifeq ($(HAVE_CG), 1)
CG_LIBS          := -lcg -lcgGL
endif

ifeq ($(HAVE_FREETYPE), 1)
FREETYPE_CFLAGS  := -DHAVE_FREETYPE -Ifreetype2
FREETYPE_LIBS    := -lfreetype
endif

ifeq ($(HAVE_LIBXML2), 1)
LIBXML2_CFLAGS   := -Ilibxml2 -DHAVE_LIBXML2 -DHAVE_GLSL
LIBXML2_LIBS     := -lxml2 -liconv
endif

ifeq ($(HAVE_SDL), 1)
SDL_LIBS         := -lSDL
SDL_CFLAGS       := -ISDL -DHAVE_SDL
BSD_LOCAL_INC    :=
endif

ifeq ($(HAVE_SDL2), 1)
SDL2_LIBS        := -lSDL2
SDL2_CFLAGS      := -ISDL2 -DHAVE_SDL2
endif

ifeq ($(HAVE_RSOUND), 1)
RSOUND_CFLAGS    := -DHAVE_RSOUND
RSOUND_LIBS      := -lrsound
endif

ifeq ($(HAVE_PYTHON), 1)
PYTHON_LIBS      := -lpython32
PYTHON_CFLAGS    := -DHAVE_PYTHON -Ipython
endif

ifeq ($(HAVE_FFMPEG), 1)
AVCODEC_LIBS     := -lavcodec
AVUTIL_LIBS      := -lavutil
SWSCALE_LIBS     := -lswscale
AVFORMAT_LIBS    := -lavformat
FFMPEG_LIBS      := -lws2_32 -lz
endif

OBJDIR           := obj-w32

OS               := Win32
OBJ              :=
JOYCONFIG_OBJ    :=
LIBS             := -lm
JOYCONFIG_LIBS   :=
DEFINES          := -I. -Ilibretro-common/include -DRARCH_INTERNAL
LDFLAGS          := -L. -static-libgcc

ifeq ($(OVERLAY), 1)
   HAVE_OVERLAY := 1
   DEFINES += -DHAVE_OVERLAY
endif

include Makefile.common

HEADERS = $(wildcard */*/*.h) $(wildcard */*.h) $(wildcard *.h)

ifneq ($(HOST_PREFIX),)
   CC = $(HOST_PREFIX)gcc
   CXX = $(HOST_PREFIX)g++
   WINDRES = $(HOST_PREFIX)windres
else
   CC = gcc
   CXX = g++
   WINDRES = windres
endif

libretro ?= -lretro

ifeq ($(DYNAMIC), 1)
   DEFINES += -DHAVE_DYNAMIC
else
   LIBS += $(libretro)
endif

ifneq ($(V), 1)
   Q := @
endif

ifeq ($(DEBUG), 1)
   CFLAGS += -O0 -g
   CXXFLAGS += -O0 -g
else
   CFLAGS += -O3 -ffast-math
   CXXFLAGS += -O3 -ffast-math
   LDCXXFLAGS += -s -Wl,-subsystem,windows
endif

CFLAGS += -Wall -Wno-unused-result -Wno-unused-variable -I.
CXXFLAGS += -Wall -Wno-unused-result -Wno-unused-variable -I. -std=c++0x -D__STDC_CONSTANT_MACROS
ifeq ($(CXX_BUILD), 1)
   CFLAGS += -std=c++0x -xc++ -D__STDC_CONSTANT_MACROS
else
   ifneq ($(GNU90_BUILD), 1)
      CFLAGS += -std=gnu99
   endif
endif

RARCH_OBJ := $(addprefix $(OBJDIR)/,$(OBJ))

all: $(TARGET)

-include $(RARCH_OBJ:.o=.d)

$(TARGET): $(RARCH_OBJ)
	@$(if $(Q), $(shell echo echo LD $@),)
	$(Q)$(CXX) -o $@ $(RARCH_OBJ) $(LIBS) $(LDFLAGS) $(LDCXXFLAGS)

$(OBJDIR)/%.o: %.c
	@mkdir -p $(dir $@)
	@$(if $(Q), $(shell echo echo CC $<),)
	$(Q)$(CC) $(CFLAGS) $(DEFINES) -MMD -c -o $@ $<

.FORCE:

$(OBJDIR)/git_version.o: git_version.c .FORCE
	@mkdir -p $(dir $@)
	@$(if $(Q), $(shell echo echo CC $<),)
	$(Q)$(CC) $(CFLAGS) $(DEFINES) -MMD -c -o $@ $<

$(OBJDIR)/%.o: %.cpp
	@mkdir -p $(dir $@)
	@$(if $(Q), $(shell echo echo CXX $<),)
	$(Q)$(CXX) $(CXXFLAGS) $(DEFINES) -MMD -c -o $@ $<

$(OBJDIR)/%.o: %.rc $(HEADERS)
	@mkdir -p $(dir $@)
	@$(if $(Q), $(shell echo echo WINDRES $<),)
	$(Q)$(WINDRES) -o $@ $<

clean:
	rm -rf $(OBJDIR)
	rm -f *.d

.PHONY: all install uninstall clean

